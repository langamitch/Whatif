rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /posts/{postId} {
      // Allow anyone to read posts
      allow read: if true;

      // Allow authenticated users to create valid posts
      allow create: if request.auth != null && isPostDataValid();
      
      // ✅ CHANGED: Allow authenticated users to update a post ONLY
      // if they are incrementing the readCount by 1.
      allow update: if request.auth != null && onlyReadCountIsChanging(postId);

      // Nobody can delete posts
      allow delete: if false;
    }

    // --- Helper Functions ---
    function isPostDataValid() {
      // ... (your existing validation function)
      let data = request.resource.data;
      return data.name is string && data.name.size() > 0 &&
             data.suggestion is string && data.suggestion.size() > 0 &&
             data.socialLink is string && data.socialLink.matches('^https?://.*') &&
             data.timestamp == request.time;
    }
    
    // ✅ NEW: Helper function to validate the read count update
    function onlyReadCountIsChanging(postId) {
      let incomingData = request.resource.data;
      let existingData = resource.data;
      
      // Ensure the readCount field is being incremented by exactly 1
      let isReadCountIncrement = incomingData.readCount == existingData.readCount + 1;
      
      // Ensure no other fields are being changed
      return isReadCountIncrement &&
             incomingData.name == existingData.name &&
             incomingData.suggestion == existingData.suggestion &&
             incomingData.socialLink == existingData.socialLink;
    }
  }
}
